'use client';

import { motion } from 'framer-motion';
import { useState, useEffect } from 'react';
import Link from 'next/link';

const zodiacSigns = [
  { name: '‡∏°‡∏µ‡∏ô', icon: '‚ôì', dates: '‡∏°‡∏µ.‡∏Ñ. 21 - ‡πÄ‡∏°.‡∏¢. 19' },
  { name: '‡πÄ‡∏°‡∏©', icon: '‚ôà', dates: '‡πÄ‡∏°.‡∏¢. 20 - ‡∏û.‡∏Ñ. 20' },
  { name: '‡∏û‡∏§‡∏©‡∏†', icon: '‚ôâ', dates: '‡∏û.‡∏Ñ. 21 - ‡∏°‡∏¥.‡∏¢. 21' },
  { name: '‡πÄ‡∏°‡∏ñ‡∏∏‡∏ô', icon: '‚ôä', dates: '‡∏°‡∏¥.‡∏¢. 22 - ‡∏Å.‡∏Ñ. 22' },
  { name: '‡∏Å‡∏£‡∏Å‡∏é', icon: '‚ôã', dates: '‡∏Å.‡∏Ñ. 23 - ‡∏™.‡∏Ñ. 22' },
  { name: '‡∏™‡∏¥‡∏á‡∏´‡πå', icon: '‚ôå', dates: '‡∏™.‡∏Ñ. 23 - ‡∏Å.‡∏¢. 22' },
  { name: '‡∏Å‡∏±‡∏ô‡∏¢‡πå', icon: '‚ôç', dates: '‡∏Å.‡∏¢. 23 - ‡∏ï.‡∏Ñ. 23' },
  { name: '‡∏ï‡∏∏‡∏•‡∏¢‡πå', icon: '‚ôé', dates: '‡∏ï.‡∏Ñ. 24 - ‡∏û.‡∏¢. 22' },
  { name: '‡∏û‡∏¥‡∏à‡∏¥‡∏Å', icon: '‚ôè', dates: '‡∏û.‡∏¢. 23 - ‡∏ò.‡∏Ñ. 21' },
  { name: '‡∏ò‡∏ô‡∏π', icon: '‚ôê', dates: '‡∏ò.‡∏Ñ. 22 - ‡∏°.‡∏Ñ. 19' },
  { name: '‡∏°‡∏Å‡∏£', icon: '‚ôë', dates: '‡∏°.‡∏Ñ. 20 - ‡∏Å.‡∏û. 18' },
  { name: '‡∏Å‡∏∏‡∏°‡∏†‡πå', icon: '‚ôí', dates: '‡∏Å.‡∏û. 19 - ‡∏°‡∏µ.‡∏Ñ. 20' }
];

const fortuneMessages = [
  '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà ‡πÜ',
  '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏Ñ‡∏∏‡∏ì',
  '‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏°‡∏µ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏ó‡∏µ‡πà‡∏î‡∏µ ‡∏Ñ‡∏ß‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏ö',
  '‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏≤‡∏î‡πÄ‡∏à‡πá‡∏ö‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢',
  '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏ö‡∏õ‡∏∞‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ù‡∏π‡∏á',
  '‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏°‡∏≤‡∏ñ‡∏∂‡∏á',
  '‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç',
  '‡∏î‡∏ß‡∏á‡∏ä‡∏∞‡∏ï‡∏≤‡∏™‡πà‡∏≠‡∏á‡πÅ‡∏™‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏£‡∏≠‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤',
  '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏™‡∏°‡∏≤‡∏ò‡∏¥‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô',
  '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÑ‡∏´‡∏•‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏°‡∏≤‡∏Å'
];

const luckyItems = [
  { type: '‡∏™‡∏µ', items: ['‡πÅ‡∏î‡∏á', '‡∏ó‡∏≠‡∏á', '‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß', '‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô', '‡∏°‡πà‡∏ß‡∏á', '‡∏ä‡∏°‡∏û‡∏π'] },
  { type: '‡πÄ‡∏•‡∏Ç', items: ['7', '3', '9', '1', '5', '8'] },
  { type: '‡∏ó‡∏¥‡∏®', items: ['‡∏ó‡∏¥‡∏®‡πÄ‡∏´‡∏ô‡∏∑‡∏≠', '‡∏ó‡∏¥‡∏®‡πÉ‡∏ï‡πâ', '‡∏ó‡∏¥‡∏®‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å', '‡∏ó‡∏¥‡∏®‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏ï‡∏Å'] }
];

export default function DailyFortune() {
  const [selectedZodiac, setSelectedZodiac] = useState(null);
  const [fortune, setFortune] = useState(null);
  const [isGenerating, setIsGenerating] = useState(false);

  const generateFortune = () => {
    if (!selectedZodiac) return;
    
    setIsGenerating(true);
    
    setTimeout(() => {
      const randomFortune = fortuneMessages[Math.floor(Math.random() * fortuneMessages.length)];
      const randomLucky = {
        color: luckyItems[0].items[Math.floor(Math.random() * luckyItems[0].items.length)],
        number: luckyItems[1].items[Math.floor(Math.random() * luckyItems[1].items.length)],
        direction: luckyItems[2].items[Math.floor(Math.random() * luckyItems[2].items.length)]
      };
      
      setFortune({
        message: randomFortune,
        lucky: randomLucky,
        date: new Date().toLocaleDateString('th-TH')
      });
      setIsGenerating(false);
    }, 2000);
  };

  return (
    <div className="min-h-screen p-4">
      <div className="container mx-auto max-w-4xl">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-center py-8"
        >
          <div className="text-6xl mb-4">üåÖ</div>
          <h1 className="text-3xl md:text-4xl font-bold text-white mb-2">
            ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏î‡∏ß‡∏á‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
          </h1>
          <p className="text-white/80">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏®‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏î‡∏ß‡∏á‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô</p>
        </motion.div>

        {/* Zodiac Selection */}
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.3 }}
          className="mb-8"
        >
          <h2 className="text-xl font-semibold text-white mb-4 text-center">
            ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏®‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
          </h2>
          <div className="grid grid-cols-3 md:grid-cols-4 gap-3">
            {zodiacSigns.map((zodiac, index) => (
              <motion.button
                key={zodiac.name}
                initial={{ opacity: 0, scale: 0.8 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ delay: index * 0.05 }}
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                onClick={() => setSelectedZodiac(zodiac)}
                className={`p-4 rounded-xl text-center transition-all ${
                  selectedZodiac?.name === zodiac.name
                    ? 'bg-purple-500 text-white shadow-lg'
                    : 'bg-white/10 text-white hover:bg-white/20'
                }`}
              >
                <div className="text-2xl mb-1">{zodiac.icon}</div>
                <div className="text-sm font-medium">{zodiac.name}</div>
              </motion.button>
            ))}
          </div>
        </motion.div>

        {/* Generate Button */}
        {selectedZodiac && (
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            className="text-center mb-8"
          >
            <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              onClick={generateFortune}
              disabled={isGenerating}
              className="bg-gradient-to-r from-purple-500 to-pink-500 text-white px-8 py-3 rounded-full font-semibold text-lg shadow-lg disabled:opacity-50"
            >
              {isGenerating ? (
                <div className="flex items-center space-x-2">
                  <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white"></div>
                  <span>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢...</span>
                </div>
              ) : (
                '‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏î‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ'
              )}
            </motion.button>
          </motion.div>
        )}

        {/* Fortune Result */}
        {fortune && (
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            className="bg-white/10 backdrop-blur-md rounded-2xl p-6 mb-8"
          >
            <div className="text-center mb-6">
              <div className="text-4xl mb-2">{selectedZodiac.icon}</div>
              <h3 className="text-2xl font-bold text-white mb-1">
                ‡∏£‡∏≤‡∏®‡∏µ{selectedZodiac.name}
              </h3>
              <p className="text-white/80">{fortune.date}</p>
            </div>
            
            <div className="bg-white/10 rounded-xl p-4 mb-6">
              <h4 className="text-lg font-semibold text-white mb-2">üîÆ ‡∏î‡∏ß‡∏á‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô</h4>
              <p className="text-white/90">{fortune.message}</p>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div className="bg-white/10 rounded-xl p-4 text-center">
                <div className="text-2xl mb-2">üé®</div>
                <h5 className="font-semibold text-white mb-1">‡∏™‡∏µ‡∏°‡∏á‡∏Ñ‡∏•</h5>
                <p className="text-white/90">{fortune.lucky.color}</p>
              </div>
              <div className="bg-white/10 rounded-xl p-4 text-center">
                <div className="text-2xl mb-2">üî¢</div>
                <h5 className="font-semibold text-white mb-1">‡πÄ‡∏•‡∏Ç‡∏°‡∏á‡∏Ñ‡∏•</h5>
                <p className="text-white/90">{fortune.lucky.number}</p>
              </div>
              <div className="bg-white/10 rounded-xl p-4 text-center">
                <div className="text-2xl mb-2">üß≠</div>
                <h5 className="font-semibold text-white mb-1">‡∏ó‡∏¥‡∏®‡∏°‡∏á‡∏Ñ‡∏•</h5>
                <p className="text-white/90">{fortune.lucky.direction}</p>
              </div>
            </div>
          </motion.div>
        )}

        {/* Back Button */}
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.5 }}
          className="text-center"
        >
          <Link href="/">
            <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="bg-white/20 text-white px-6 py-2 rounded-full hover:bg-white/30 transition-colors"
            >
              ‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
            </motion.button>
          </Link>
        </motion.div>
      </div>
    </div>
  );
}
